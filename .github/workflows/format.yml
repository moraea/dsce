name: Check code style

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  LLVM_VERSION: 16

jobs:
  format:
    name: Check code style
    runs-on: ubuntu-latest
    steps:
    # We do not want to check submodules
    - uses: actions/checkout@v3

    - name: Set permissions
      run: sudo chmod -R a+rwx /var/cache/apt/archives /etc/apt/keyrings /etc/apt/sources.list.d

    - name: Get codename
      run: |
        source /etc/os-release
        echo "UBUNTU_CODENAME=${UBUNTU_CODENAME}" >> $GITHUB_ENV

    - name: Restore cache
      uses: actions/cache@v3
      id: cache
      with:
        key: ${{ env.UBUNTU_CODENAME }}-apt-${{ env.LLVM_VERSION }}
        path: |
          /var/cache/apt/archives/**.deb
          !/var/cache/apt/archives/partial
          !/var/cache/apt/archives/lock
          /etc/apt/keyrings/apt.llvm.org.asc
          /etc/apt/sources.list.d/llvm.list

    - name: Add LLVM repo
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo tee /etc/apt/keyrings/apt.llvm.org.asc
        echo "deb [signed-by=/etc/apt/keyrings/apt.llvm.org.asc] http://apt.llvm.org/${{ env.UBUNTU_CODENAME }}/ llvm-toolchain-${{ env.UBUNTU_CODENAME }}-${{ env.LLVM_VERSION}} main" | sudo tee /etc/apt/sources.list.d/llvm.list

    - uses: cpp-linter/cpp-linter-action@v2
      id: linter
      with:
        style: file
        extensions: 'c,h,m,C,H,cpp,mm,hpp,cc,hh,c++,h++,cxx,hxx'
        tidy-checks: '-*'
        version: ${{ env.LLVM_VERSION }}
        files-changed-only: ${{ github.event_name == 'pull_request' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Check for lint failure
      if: steps.linter.outputs.checks-failed > 0 && false
      run: |
        echo "::error::Code style check failed."
        exit 1

    - name: Set permissions
      run: sudo chmod -R a+rwx /var/cache/apt/archives /etc/apt/keyrings /etc/apt/sources.list.d
